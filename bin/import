#!/usr/bin/env php
<?php

declare(strict_types=1);

// This just avoids PHP notices from not having a DOCROOT set.
define("DOCROOT", realpath(__DIR__ . '/../'));

include DOCROOT . '/vendor/autoload.php';

use pointybeard\Symphony\SectionBuilder;
use pointybeard\Symphony\SectionBuilder\Exceptions;
use pointybeard\Helpers\Cli;
use pointybeard\Helpers\Functions;
use pointybeard\Helpers\Cli\Colour\Colour;

$manpage = [
    basename(__FILE__),
    '1.0.0',
    'generate SymphonyCMS sections from a JSON file',
    'import -j /path/to/file.json --manifest=/path/to/manifest',
];

$collection = (new Cli\Input\InputCollection())
    ->add(
        Cli\Input\InputTypeFactory::build('LongOption')
            ->name('json')
            ->short('j')
            ->flags(Cli\Input\AbstractInputType::FLAG_REQUIRED | Cli\Input\AbstractInputType::FLAG_VALUE_REQUIRED)
            ->description('Path to the input JSON data')
            ->validator(function (Cli\Input\AbstractInputType $input, Cli\Input\AbstractInputHandler $context) {
                // Make sure -j (--json) is a valid file that can be read
                if(false === Functions\Json\json_validate_file($context->find('json'), $code, $message)) {
                    throw new SectionBuilder\Exceptions\SectionBuilderException(sprintf(
                        'The file specified via option --json does not exist or is an invalid JSON document. Returned: %s',
                        $message
                    ));
                }

                return $context->find('json');
            })
    )
;

include DOCROOT . '/src/Includes/common.php';

try {
    SymphonyPDO::instance((object)$databaseCredentials);
    SectionBuilder\Import::fromJsonFile($json->value());

} catch(Exception $ex) {
    Functions\Cli\display_error_and_exit(sprintf(
        "Unable to import. Returned: %s",
        $ex->getMessage()
    ), 'FATAL ERROR');
}
