#!/usr/bin/env php
<?php

declare(strict_types=1);

// This just avoids PHP notices from not having a DOCROOT set.
define("DOCROOT", realpath(__DIR__ . '/../'));

include DOCROOT . '/vendor/autoload.php';

use pointybeard\Symphony\SectionBuilder;
use pointybeard\Helpers\Cli;
use pointybeard\Helpers\Functions;
use pointybeard\Helpers\Cli\Colour\Colour;

$manpage = [
    basename(__FILE__),
    '1.0.0',
    'generate JSON string representation of all sections and fields',
    'export -m /path/to/manifest',
];

$collection = (new Cli\Input\InputCollection())
    ->add(
        Cli\Input\InputTypeFactory::build('LongOption')
            ->name('output')
            ->short('o')
            ->flags(Cli\Input\AbstractInputType::FLAG_OPTIONAL | Cli\Input\AbstractInputType::FLAG_VALUE_REQUIRED)
            ->description('Save JSON export to this location')
    )
;

include DOCROOT . '/src/Includes/common.php';

try {
    \SymphonyPDO\Loader::instance((object)$databaseCredentials);
    $output = ["sections" => []];
    foreach(Lib\Models\Section::all() as $section) {
        $output["sections"][] = json_decode((string)$section, false);
    }

    // #1 - Now that we have the sections, lets sort them based on dependency.
    $output["sections"] = SectionBuilder\AbstractOperation::orderSectionsByAssociations(
        $output["sections"]
    );

    echo json_encode(
        $output,
        JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES
    ).PHP_EOL;

} catch(Exception $ex) {
    Functions\Cli\display_error_and_exit(sprintf(
        "Unable export data. Returned: %s",
        $ex->getMessage()
    ), 'FATAL ERROR');
}
